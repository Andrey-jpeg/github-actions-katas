name: Java CI
on: push
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT: ${{github.sha}}
jobs:
  Clone-down:
    runs-on: self-hosted
    container: gradle:6-jdk11
    steps:
      - name: Clone-down
        uses: actions/checkout@v2
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .

  Build:
    needs: Clone-down
    runs-on: self-hosted
    container: gradle:6-jdk11
    steps:
      - name: Download repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: Build
        run: bash ./ci/build-app.sh
      - name: Test
        run: bash ./ci/unit-test-app.sh
      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: .

  Docker-image:
    needs: [Clone-down, Build]
    runs-on: self-hosted
    steps:
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: .
      - name: login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ env.docker_username }}
          password: ${{ env.docker_password }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./app
          push: true
          tags: ${{env.docker_username}}/micronaut-app:latest

  Component-test:
    needs: Docker-image
    runs-on: self-hosted
    steps:
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: code
        path: .
    - name: Execute component test
      run: chmod +x ci/component-test.sh && ci/component-test.sh

  Performance-test:
    needs: Docker-image
    runs-on: self-hosted
    steps:
    - name: Download build
      uses: actions/download-artifact@v2
      with:
        name: code
        path: .
    - name: Execute performance test
      run: chmod +x ci/performance-test.sh && ci/performance-test.sh
    
